CREATE OR REPLACE FUNCTION find_users_available_on(chosen_availability text) RETURNS TABLE(lastname character varying, firstname character varying)
    LANGUAGE plpgsql
    AS $$
-- DECLARE
-- 	chosen_one text;
BEGIN 
	RETURN QUERY (SELECT candidate.lastname, candidate.firstname FROM "user"
		INNER JOIN candidate ON candidate.id = "user".id
		INNER JOIN candidate_degree ON candidate_degree.id_candidate = candidate.id 
		INNER JOIN degree ON degree.id = candidate_degree.id_degree
		INNER JOIN user_availability ON user_availability.id_user = "user".id
		INNER JOIN availability ON user_availability.id_availability = availability.id
		WHERE availability.availability = chosen_availability);

-- 	RETURN chosen_one;
END;

$$;


DROP TABLE IF EXISTS "user" CASCADE;
CREATE TABLE "user" (
    id SERIAL NOT NULL PRIMARY KEY,
    mail character varying(255) NOT NULL,
    password character varying(255) NOT NULL,
    active boolean NOT NULL,
    role character varying(255) NOT NULL,
    zip_code integer,
    city character varying(255),
    phone_number character varying(10),
    created_at date NOT NULL,
    updated_at date NOT NULL
);

DROP TABLE IF EXISTS "admin" CASCADE;
CREATE TABLE "admin" (
    id INTEGER NOT NULL REFERENCES "user"(id) PRIMARY KEY,
    lastname character varying(255) NOT NULL,
    firstname character varying(255) NOT NULL
);

DROP TABLE IF EXISTS "candidate" CASCADE;
CREATE TABLE "candidate" (
    id INTEGER NOT NULL REFERENCES "user"(id) PRIMARY KEY,
    lastname character varying(255) NOT NULL,
    firstname character varying(255) NOT NULL,
    birthdate date NOT NULL
);

DROP TABLE IF EXISTS "company" CASCADE;
CREATE TABLE "company" (
    id INTEGER NOT NULL REFERENCES "user"(id) PRIMARY KEY,
    name character varying(255) NOT NULL,
    siret character varying(14) NOT NULL
);

DROP TABLE IF EXISTS "availability" CASCADE;
CREATE TABLE "availability" (
    id INTEGER NOT NULL PRIMARY KEY,
    availability character varying(255) NOT NULL
);

DROP TABLE IF EXISTS "user_availability" CASCADE;
CREATE TABLE "user_availability" (
	id_user INTEGER NOT NULL,
	id_availability INTEGER NOT NULL,
	FOREIGN KEY(id_user) REFERENCES "user"(id),
	FOREIGN KEY(id_availability) REFERENCES "availability"(id)
);

DROP TABLE IF EXISTS "degree" CASCADE;
CREATE TABLE "degree" (
    id integer NOT NULL PRIMARY KEY,
    bafa boolean NOT NULL,
    bafa_ongoing boolean NOT NULL,
    internship boolean NOT NULL,
    bpjeps boolean NOT NULL
);

DROP TABLE IF EXISTS "candidate_degree" CASCADE;
CREATE TABLE candidate_degree (
	id_candidate INTEGER NOT NULL,
	id_degree INTEGER NOT NULL,
	FOREIGN KEY(id_candidate) REFERENCES "candidate"(id),
	FOREIGN KEY(id_degree) REFERENCES "degree"(id)
);

DROP TABLE IF EXISTS "token" CASCADE;
CREATE TABLE "token" (
    id INTEGER NOT NULL REFERENCES "user"(id) PRIMARY KEY,
    token character varying(255) NOT NULL
);


INSERT INTO "availability" (id, availability) VALUES (1, 'february');
INSERT INTO "availability" (id, availability) VALUES (2, 'april');
INSERT INTO "availability" (id, availability) VALUES (3, 'july');
INSERT INTO "availability" (id, availability) VALUES (4, 'august');
INSERT INTO "availability" (id, availability) VALUES (5, 'october');
INSERT INTO "availability" (id, availability) VALUES (6, 'christmas');
INSERT INTO "availability" (id, availability) VALUES (7, 'monday');
INSERT INTO "availability" (id, availability) VALUES (8, 'tuesday');
INSERT INTO "availability" (id, availability) VALUES (9, 'wednesday');
INSERT INTO "availability" (id, availability) VALUES (10, 'thursday');
INSERT INTO "availability" (id, availability) VALUES (11, 'friday');
INSERT INTO "availability" (id, availability) VALUES (12, 'saturday');
INSERT INTO "availability" (id, availability) VALUES (13, 'sunday');


-- Candidat 1
INSERT INTO "user" (mail, password, active, role, zip_code, city, phone_number, created_at, updated_at) VALUES ('user1@user.fr', 'user', true, 'candidate', 62200, 'Boulogne sur mer', '0783616435', '2022-10-12', '2022-10-12');
INSERT INTO "token" (id, token) VALUES (1, 'qsldklqskdazldsqldkqsmd');
INSERT INTO "user_availability" (id_user, id_availability) VALUES (1, 6);
INSERT INTO "user_availability" (id_user, id_availability) VALUES (1, 8);
INSERT INTO "candidate" (id, lastname, firstname, birthdate) VALUES (1, 'Test', 'User', '2000-01-01');
INSERT INTO "degree" (id, bafa, bafa_ongoing, internship, bpjeps) VALUES (1, true, false, false, false);
INSERT INTO "candidate_degree" (id_candidate, id_degree) VALUES (1, 1);

-- Candidat 2
INSERT INTO "user" (mail, password, active, role, zip_code, city, phone_number, created_at, updated_at) VALUES ('user2@user.fr', 'user', false, 'candidate', 62200, 'Boulogne sur mer', '0783616435', '2022-10-12', '2022-10-12');
INSERT INTO "token" (id, token) VALUES (2, 'qsldklqskdazldsqlqsdqsddkqsmd');
INSERT INTO "user_availability" (id_user, id_availability) VALUES (2, 6);
INSERT INTO "user_availability" (id_user, id_availability) VALUES (2, 9);
INSERT INTO "candidate" (id, lastname, firstname, birthdate) VALUES (2, 'Test2', 'User2', '2000-01-01');
INSERT INTO "degree" (id, bafa, bafa_ongoing, internship, bpjeps) VALUES (2, false, true, false, false);
INSERT INTO "candidate_degree" (id_candidate, id_degree) VALUES (2, 2);

-- Company 1
INSERT INTO "user" (mail, password, active, role, zip_code, city, phone_number, created_at, updated_at) VALUES ('com1@com.fr', 'comp', true, 'company', 62200, 'Boulogne sur mer', '0783616435', '2022-10-12', '2022-10-12');
INSERT INTO company (id, name, siret) VALUES (3, 'Company1', 123456789);
INSERT INTO "user_availability" (id_user, id_availability) VALUES (3, 6);
INSERT INTO "user_availability" (id_user, id_availability) VALUES (3, 9);
INSERT INTO "user_availability" (id_user, id_availability) VALUES (3, 10);

SELECT find_users_available_on('christmas');